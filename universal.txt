-- Pre-fetch services and reusable data for better performance
local playersService = game:GetService("Players")
local playersFolder = game:GetService("Workspace"):FindFirstChild("FPlayers")
local replicatedStorage = game:GetService("ReplicatedStorage")
local damageEvent = replicatedStorage:WaitForChild("ACS_Engine", 9e9):WaitForChild("Events", 9e9):WaitForChild("Damage", 9e9)

-- Ensure FPlayers exists
if not playersFolder then
    warn("FPlayers folder not found in Workspace!")
end

-- Function to handle targeting logic
local function handleTarget(playerModel)
    -- Ensure the player model has the required parts
    local humanoid = playerModel:FindFirstChild("Humanoid")
    local leftLowerArm = playerModel:FindFirstChild("LeftLowerArm")
    local hitboxLeftLowerArm = leftLowerArm and leftLowerArm:FindFirstChild("HitboxLeftLowerArm")

    if humanoid and hitboxLeftLowerArm then
        -- Create args for the current player
        local args = {
            [1] = {
                ["origin"] = Vector3.new(-272.4232177734375, -14.307608604431152, -23.735084533691406),
                ["weaponName"] = "M4A1",
                ["bulletID"] = "unique_bullet_id_" .. tostring(math.random()), -- Generate a unique bullet ID
                ["currentPenetrationCount"] = 1,
                ["shellSpeed"] = 210,
                ["maxPenetrationCount"] = 1,
                ["registeredParts"] = {
                    [hitboxLeftLowerArm] = true,
                },
                ["penetrationMultiplier"] = 0.8,
                ["shellType"] = "Bullet",
                ["shellMaxDist"] = 7000,
                ["filterDescendants"] = {},
            },
            [2] = humanoid, -- Target the player's humanoid
            [3] = 154.2140350341797, -- Distance value
            [4] = 2, -- Additional parameter
            [5] = hitboxLeftLowerArm, -- Target the hitbox part
        }

        -- Invoke the damage event for this player
        damageEvent:InvokeServer(unpack(args))
    end
end

-- Loop through players in the Players service
for _, player in ipairs(playersService:GetPlayers()) do
    if player.Character then
        handleTarget(player.Character)
    end
end

-- Loop through players in the Workspace.FPlayers folder
if playersFolder then
    for _, playerModel in ipairs(playersFolder:GetChildren()) do
        handleTarget(playerModel)
    end
end