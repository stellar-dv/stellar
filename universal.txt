-- Get all players in the Workspace.FPlayers
local playersFolder = game:GetService("Workspace"):FindFirstChild("FPlayers")
if not playersFolder then
    warn("FPlayers folder not found in Workspace!")
    return
end

-- Loop through each player in the FPlayers folder
for _, playerModel in ipairs(playersFolder:GetChildren()) do
    -- Ensure the player model has the required parts
    local humanoid = playerModel:FindFirstChild("Humanoid")
    local leftLowerArm = playerModel:FindFirstChild("LeftLowerArm")
    local hitboxLeftLowerArm = leftLowerArm and leftLowerArm:FindFirstChild("HitboxLeftLowerArm")

    if humanoid and leftLowerArm and hitboxLeftLowerArm then
        -- Create the args table dynamically for each player
        local args = {
            [1] = {
                ["origin"] = Vector3.new(-272.4232177734375, -14.307608604431152, -23.735084533691406),
                ["weaponName"] = "M4A1",
                ["bulletID"] = "unique_bullet_id_" .. tostring(math.random()), -- Generate a unique bullet ID
                ["currentPenetrationCount"] = 1,
                ["shellSpeed"] = 210,
                ["maxPenetrationCount"] = 1,
                ["registeredParts"] = {
                    [hitboxLeftLowerArm] = true,
                },
                ["penetrationMultiplier"] = 0.8,
                ["shellType"] = "Bullet",
                ["shellMaxDist"] = 7000,
                ["filterDescendants"] = {
                    [1] = game:GetService("Workspace"):WaitForChild("blakneycurse1337", 9e9),
                    [2] = game:GetService("Workspace"):WaitForChild("Camera", 9e9):WaitForChild("Viewmodel", 9e9),
                },
            },
            [2] = humanoid, -- Target the player's humanoid
            [3] = 154.2140350341797, -- Distance value (adjustable as needed)
            [4] = 2, -- Additional parameter (adjustable as needed)
            [5] = hitboxLeftLowerArm, -- Target the hitbox part
        }

        -- Invoke the damage event for this player
        game:GetService("ReplicatedStorage"):WaitForChild("ACS_Engine", 9e9):WaitForChild("Events", 9e9):WaitForChild("Damage", 9e9):InvokeServer(unpack(args))

        -- Print debug information
        print("Targeting player: " .. playerModel.Name)
    else
        warn("Player " .. playerModel.Name .. " is missing required parts.")
    end
end