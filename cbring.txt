-- LocalScript (inside StarterPlayerScripts)

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

-- Variables for controlling distance
local distance = 10 -- Initial distance in studs
local moveSpeed = 10 -- Speed at which players move towards the character
local teamCheck = true -- Set to true to enable team check, false to disable

-- Function to update the position and freeze the other players
local function bringPlayersInFront()
    -- Loop through all players in the game
    for _, otherPlayer in pairs(game.Players:GetPlayers()) do
        -- Skip if it's the local player or if team check is enabled and the other player is on the same team
        if otherPlayer == player or (teamCheck and otherPlayer.Team == player.Team) then
            continue
        end

        local otherCharacter = otherPlayer.Character
        if otherCharacter and otherCharacter:FindFirstChild("HumanoidRootPart") then
            local otherHumanoidRootPart = otherCharacter.HumanoidRootPart
            
            -- Calculate the desired position in front of the local player
            local direction = (humanoidRootPart.CFrame.LookVector).unit
            local targetPosition = humanoidRootPart.Position + direction * distance
            
            -- Move the other player toward the target position
            -- Instead of directly setting the position, we use Tweening for smoother movement
            local tweenService = game:GetService("TweenService")
            local goal = {Position = targetPosition}
            local tweenInfo = TweenInfo.new(1, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut)
            local tween = tweenService:Create(otherHumanoidRootPart, tweenInfo, goal)
            tween:Play()

            -- Freeze the other player: Disable walking and make them non-collidable
            local humanoid = otherCharacter:FindFirstChildOfClass("Humanoid")
            if humanoid then
                humanoid.WalkSpeed = 0 -- Disable walking
                humanoid.PlatformStand = true -- Freeze the player in place
            end

            -- Make the character non-collidable
            for _, part in pairs(otherCharacter:GetChildren()) do
                if part:IsA("BasePart") then
                    part.CanCollide = false -- Disable collisions
                end
            end
        end
    end
end

-- Handle key inputs for changing distance
local userInputService = game:GetService("UserInputService")

userInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    
    if input.UserInputType == Enum.UserInputType.Keyboard then
        if input.KeyCode == Enum.KeyCode.E then
            distance = distance - 1 -- Move closer
        elseif input.KeyCode == Enum.KeyCode.Q then
            distance = distance + 1 -- Move further away
        end
    end
end)

-- Optimized loop using Heartbeat for consistent updates
local runService = game:GetService("RunService")

runService.Heartbeat:Connect(function()
    bringPlayersInFront()
end)