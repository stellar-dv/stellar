if not game:IsLoaded() then
    game.Loaded:Wait()
end

pcall(function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/1price/usercreation/refs/heads/main/workspace/ACL%20-%20legacy.lua'))()
end)

local function fadeText(labeltext)
    local screenGui = Instance.new("ScreenGui")
    local label = Instance.new("TextLabel")

    -- Set up the ScreenGui and TextLabel properties
    screenGui.Parent = cloneref(game:GetService("CoreGui")) or game:GetService("CoreGui")
    label.Parent = screenGui
    label.Size = UDim2.new(0.5, 0, 0.2, 0)
    label.Position = UDim2.new(0.30, 0, 0.45, 0)
    label.BackgroundTransparency = 1
    label.TextTransparency = 1
    label.Text = labeltext
    label.TextColor3 = Color3.new(0, 1, 1)  -- Aqua color
    label.TextScaled = true
    label.Font = Enum.Font.GothamBlack -- Bold, modern font

    -- Define the fade duration
    local fadeDuration = 1

    -- Fade in
    local tweenService = game:GetService("TweenService")
    local fadeIn = tweenService:Create(label, TweenInfo.new(fadeDuration), {TextTransparency = 0})
    fadeIn:Play()
    fadeIn.Completed:Wait()

    task.wait(fadeDuration)

    -- Fade out
    local fadeOut = tweenService:Create(label, TweenInfo.new(fadeDuration), {TextTransparency = 1})
    fadeOut:Play()
    fadeOut.Completed:Wait()

    screenGui:Destroy()
end

fadeText("Made By Gazer Ha")
fadeText("Yu Ego so big, me mad >:(")
fadeText("For Better Bypass\nRead Your Clipboard")
task.wait(1)
fadeText("READ THE TUTORIAL ON YOUR COPY")

local function isEmoji(c)
    local code = utf8.codepoint(c)
    return (code >= 0x1F600 and code <= 0x1F64F) or  -- Emoticons
           (code >= 0x1F300 and code <= 0x1F5FF) or  -- Symbols & pictographs
           (code >= 0x1F680 and code <= 0x1F6FF) or  -- Transport & map symbols
           (code >= 0x1F700 and code <= 0x1F77F) or  -- Alchemical symbols
           (code >= 0x1F900 and code <= 0x1F9FF) or  -- Supplemental symbols
           (code >= 0x2600 and code <= 0x26FF) or    -- Miscellaneous symbols
           (code >= 0x2700 and code <= 0x27BF) or    -- Dingbats
           (code >= 0x1F1E6 and code <= 0x1F1FF)     -- Flags
end

local function modifyText(input)
    if not string.find(input, " ") then
        input = ">" .. input
    end

    local replacements = {
        sex = "s••••••e•x•", fuck = "f••••••u•c•k•", damn = "•d••••••a••m••n•",
        shit = "•s••••••h•i•t•", porn = "•p••••••o•r•n•", bitch = "•b•i•t•••c•h•",
        nigga = "n•i•g•••g•a", dick = "d••••••i••••c•k••", gay = "g••••••a•y",
        pussy = "p••••u•s•s••••••y••", cock = "c••••••o•c•k•"
    }

    local lowerInput = input

    for word, replacement in pairs(replacements) do
        lowerInput = lowerInput:gsub(word, replacement)
    end

    local result = ""
    for char in lowerInput:gmatch(".") do
        result = result .. (isEmoji(char) and "{" .. char .. "}" or char)
    end

    result = result:gsub("•", "\xEF\xBF\xB8") -- Replace dot symbol

    return result
end

local TextChatService = game:GetService("TextChatService")

local function onChatMessage(message)
    local modifiedText = modifyText(message)
    local A_2 = "All"

    if game:GetService("TextChatService"):FindFirstChild("TextChannels") then
        game:GetService("TextChatService").TextChannels.RBXGeneral:SendAsync(modifiedText)
    else
        game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(modifiedText, A_2)
    end
end

-- Bind to player chat
game:GetService("Players").LocalPlayer.Chatted:Connect(onChatMessage)