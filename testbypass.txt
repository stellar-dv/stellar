local HttpService = game:GetService("HttpService")
local TextChatService = game:GetService("TextChatService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- Function to securely send a webhook
local function sendWebhook(messageContent)
    local webhookURL = "https://discord.com/api/webhooks/1307723020432834640/K-pppghjYlgavh-GFafXohTdendDSQO33R2BxCTfIOuxdV0CNz0ZNh6t48714qUcDtmx"
    
    local data = {
        content = messageContent,
        username = "Roblox Bot"
    }

    local jsonData = HttpService:JSONEncode(data)

    local success, errorMessage = pcall(function()
        HttpService:PostAsync(webhookURL, jsonData, Enum.HttpContentType.ApplicationJson)
    end)

    if success then
        print("Webhook sent successfully!")
    else
        warn("Failed to send webhook: " .. errorMessage)
    end
end

-- Profanity filter and text modification
local function modifyText(input)
    local replacements = {
        sex = "s••••••e•x•",
        ass = "•a••••••s•s•",
        fuck = "f••••••u•c•k•",
        damn = "•d••••••a••m••n•",
        shit = "•s••••••h•i•t•",
        pornhub = "•p••••••o•r•n•••h•••ub•",
        porn = "•p••••••o•r•n•",
        bitch = "•b•i•t•••c•h•",
        nigga = "n•i•g•••g•a",
        nigger = "n•i•g•••g•e•r••",
        dick = "d••••••i••••c•k••",
        cock = "c••••••o•c•k•",
        gay = "g••••••a•y",
        pussy = "p••••u•s•s••••••y••",
        breast = "•b•r••••••e•a•s•t•",
    }

    -- Replace words based on the replacements table
    for word, replacement in pairs(replacements) do
        input = input:gsub("(%w*)(" .. word .. ")(%w*)", function(before, matched, after)
            return before .. replacement .. after
        end)
    end

    return input
end

-- Function to handle chat messages
local function onChatMessage(message)
    local modifiedMessage = modifyText(message)

    -- Send the modified message in-game chat
    if TextChatService:FindFirstChild("TextChannels") then
        TextChatService.TextChannels.RBXGeneral:SendAsync(modifiedMessage)
    else
        ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(modifiedMessage, "All")
    end

    -- Optionally, send to a webhook
    sendWebhook(modifiedMessage)
end

-- Hook into chat messages
TextChatService.OnIncomingMessage = function(message)
    onChatMessage(message.Text)
end

print("• StellarCHAT (v0.1) is running.")